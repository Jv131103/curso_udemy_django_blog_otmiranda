        Criando o model e admin Page (models.Model e admin.ModelAdmin do Django)


Em models.py de blog, vamos fazer:

    from django.db import models
    from utils.rands import new_slugfy


    # Create your models here.
    class Tag(models.Model):
        class Meta:
            verbose_name = "Tag"
            verbose_name_plural = "Tags"

        name = models.CharField(max_length=255)
        slug = models.SlugField(
            unique=True,
            default=None,
            null=True,
            blank=True,
            max_length=255
        )

        def save(self, *args, **kwargs):
            if not self.slug:
                self.slug = new_slugfy(self.name)
            return super().save(*args, **kwargs)

        def __str__(self) -> str:
            return self.name


    class Category(models.Model):
        class Meta:
            verbose_name = "Category"
            verbose_name_plural = "Categories"

        name = models.CharField(max_length=255)
        slug = models.SlugField(
            unique=True,
            default=None,
            null=True,
            blank=True,
            max_length=255
        )

        def save(self, *args, **kwargs):
            if not self.slug:
                self.slug = new_slugfy(self.name)
            return super().save(*args, **kwargs)

        def __str__(self) -> str:
            return self.name


    class Page(models.Model):
        title = models.CharField(max_length=65,)
        slug = models.SlugField(
            unique=True,
            default=None,
            null=True,
            blank=True,
            max_length=255
        )
        is_published = models.BooleanField(
            default=False,
            help_text=(
                'Este campo precisará estar marcado para'
                'a página ser exibida publicamente.'
            )
        )
        content = models.TextField()

        def save(self, *args, **kwargs):
            if not self.slug:
                self.slug = new_slugfy(self.title)
            return super().save(*args, **kwargs)

        def __str__(self) -> str:
            return self.title

Em seguida, em admin.py de blog vamos realizar:

    from blog.models import Category, Page, Tag
    from django.contrib import admin


    # Register your models here.
    @admin.register(Tag)
    class TagAdmin(admin.ModelAdmin):
        list_display = "id", "name", "slug"
        list_display_links = "name",
        search_fields = "id", "name", "slug"
        list_per_page = 10
        ordering = "-id",
        prepopulated_fields = {
            "slug": ("name",),
        }


    @admin.register(Category)
    class CategoryAdmin(admin.ModelAdmin):
        list_display = "id", "name", "slug"
        list_display_links = "name",
        search_fields = "id", "name", "slug"
        list_per_page = 10
        ordering = "-id",
        prepopulated_fields = {
            "slug": ("name",),
        }


    @admin.register(Page)
    class PageAdmin(admin.ModelAdmin):
        list_display = "id", "title", "is_published",
        list_display_links = "title",
        search_fields = "id", "slug", "title", "content"
        list_per_page = 50
        list_filter = "is_published",
        list_editable = "is_published",
        ordering = "-id",
        prepopulated_fields = {
            "slug": ("title",),
        }

