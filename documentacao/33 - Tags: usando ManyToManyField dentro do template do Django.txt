        Tags: usando ManyToManyField dentro do template do Django


Em views.py de blog vamos adicionar:

    from blog.models import Post
    from django.core.paginator import Paginator
    from django.shortcuts import render

    PER_PAGE = 9


    # Create your views here.
    def index(request):
        posts = Post.objects.get_published()

        paginator = Paginator(posts, PER_PAGE)
        page_number = request.GET.get("page")
        page_obj = paginator.get_page(page_number)
        return render(
            request,
            'blog/pages/index.html',
            {
                "page_obj": page_obj,
            }
        )


    def created_by(request, author_pk):
        posts = Post.objects.get_published().filter(created_by__pk=author_pk)

        paginator = Paginator(posts, PER_PAGE)
        page_number = request.GET.get("page")
        page_obj = paginator.get_page(page_number)
        return render(
            request,
            'blog/pages/index.html',
            {
                "page_obj": page_obj,
            }
        )


    def category(request, slug):
        posts = Post.objects.get_published().filter(category__slug=slug)

        paginator = Paginator(posts, PER_PAGE)
        page_number = request.GET.get("page")
        page_obj = paginator.get_page(page_number)
        return render(
            request,
            'blog/pages/index.html',
            {
                "page_obj": page_obj,
            }
        )


    def tag(request, slug):
        posts = Post.objects.get_published().filter(tags__slug=slug)

        paginator = Paginator(posts, PER_PAGE)
        page_number = request.GET.get("page")
        page_obj = paginator.get_page(page_number)
        return render(
            request,
            'blog/pages/index.html',
            {
                "page_obj": page_obj,
            }
        )


    def page(request, slug):
        return render(
            request,
            'blog/pages/page.html'
        )


    def post(request, slug):
        post = Post.objects.get_published().filter(slug=slug).first()

        return render(
            request,
            'blog/pages/post.html',
            {
                "post": post
            }
        )

Após isso, em urls.py de blog, vamos utilizar:

    from blog.views import category, created_by, index, page, post, tag
    from django.contrib import admin
    from django.urls import path

    app_name = "blog"

    urlpatterns = [
        path("", index, name="index"),
        path("post/<slug:slug>/", post, name="post"),
        path("page/<slug:slug>/", page, name="page"),
        path("created_by/<int:author_pk>/", created_by, name="created_by"),
        path("category/<slug:slug>/", category, name="category"),
        path("tag/<slug:slug>/", tag, name="tag"),
    ]

E por fim em post.html:

    {% extends 'blog/base.html' %} 

    {% block additional_head %}
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/codemirror.min.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/dracula.min.css">

    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/codemirror.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/mode/python/python.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/mode/javascript/javascript.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/mode/htmlmixed/htmlmixed.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/mode/css/css.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.62.2/mode/xml/xml.min.js"></script>
    {% endblock additional_head %}

    {% block content %}
    <main class="main-content single-post section-wrapper">
    <div class="single-post-content section-content-narrow">
        <div class="single-post-gap section-gap">

        {% if post.cover and post.cover_in_post_content %}
            <div class="single-post-cover pb-base">
            <img 
                loading="lazy" 
                src="{{ post.cover.url }}" 
                alt="{{ post.title }}"
            >
            </div>
        {% endif %}

        <h2 class="single-post-title pb-base center">
            {{ post.title }}
        </h2>

        <div class="post-meta pb-base">
            <div class="post-meta-item">
            <a 
                class="post-meta-link" 
                href="{% url 'blog:created_by' post.created_by.pk  %}"
            >
                <i class="fa-solid fa-user"></i>
                <span>
                {% if post.created_by.first_name %}
                    {{ post.created_by.first_name }} 
                    {{ post.created_by.last_name }}
                {% else %}
                    {{ post.created_by.username }}
                {% endif %}
                </span>
            </a>
            </div>
            <div class="post-meta-item">
            <span class="post-meta-link">
                <i class="fa-solid fa-calendar-days"></i>
                <span>
                {{ post.created_at | date:'d/m/Y \à\s H:i' }}
                </span>
            </span>
            </div>

            {% if post.category %}
            <div class="post-meta-item">
                <a 
                class="post-meta-link" 
                href="{% url 'blog:category' post.category.slug  %}"
                >
                <i class="fa-solid fa-tag"></i>
                <span>
                    {{ post.category.name }}
                </span>
                </a>
            </div>
            {% endif %}
        
        </div>

        <p class="single-post-excerpt pb-base">
            {{ post.excerpt | safe }}
        </p>

        <div class="separator"></div>

        <div class="single-post-content">
            {{ post.content | safe  }} 
        
            {% if post.tags.all.exists %}
            <div class="post-tags">
                <span>Tags: </span>
                {% for tag in post.tags.all %}
                <a class="post-tag-link" href="{% url "blog:tag" tag.slug %}">
                    <i class="fa-solid fa-link"></i>
                    <span>{{ tag.name }}</span>
                </a>
                {% endfor %}
            </div>
            {% endif %}
        </div>
        </div>
    </div>
    </main>

    {% endblock content %}
