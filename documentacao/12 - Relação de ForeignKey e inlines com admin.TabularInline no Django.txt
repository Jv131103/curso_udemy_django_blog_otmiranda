            Relação de ForeignKey e inlines com admin.TabularInline no Django


Essas relações são relacionamentos de dados. Aqui vamos fazer que SiteSetup tenha um ou muitos 
MenuLink.

Para fazer isso vamos realizar:

    . Em models.py de site_setup vamos fazer:

        from django.db import models


        # Create your models here.
        class MenuLink(models.Model):
            class Meta:
                verbose_name = "Menu Link"
                verbose_name_plural = "Menu Links"

            text = models.CharField(max_length=50)
            url_or_path = models.CharField(max_length=2048)
            new_tab = models.BooleanField(default=False)
            site_setup = models.ForeignKey(
                'SiteSetup',  # Como já fizemos a migração no Django, o tal nos permite fazer isso
                on_delete=models.CASCADE,
                blank=True,
                null=True,
                default=None
            )

            def __str__(self):
                return self.text


        class SiteSetup(models.Model):
            class Meta:
                verbose_name = "Setup"
                verbose_name_plural = "Setup"

            title = models.CharField(max_length=65)
            description = models.CharField(max_length=255)
            show_header = models.BooleanField(default=True)
            show_search = models.BooleanField(default=True)
            show_menu = models.BooleanField(default=True)
            show_description = models.BooleanField(default=True)
            show_pagination = models.BooleanField(default=True)
            show_footer = models.BooleanField(default=True)

            def __str__(self):
                return self.title

Agora, vamos fazer com que SiteSetup possa realizar cadastros de MenuLink.

Para fazer isso vamos realizar:

    . Em admin.py de site_setup vamos fazer:

        from django.contrib import admin
        from site_setup.models import MenuLink, SiteSetup


        @admin.register(MenuLink)
        class MenuLinkAdmin(admin.ModelAdmin):
            list_display = "id", "text", "url_or_path"
            list_display_links = "id", "text", "url_or_path"
            search_fields = "id", "text", "url_or_path"


        class MenuLinkInline(admin.StackedInline):
            model = MenuLink
            extra = 1


        @admin.register(SiteSetup)
        class SiteSetupAdmin(admin.ModelAdmin):
            list_display = "title", "description",
            inlines = MenuLinkInline,

            def has_add_permission(self, request):
                return not SiteSetup.objects.all()[:1].exists()
